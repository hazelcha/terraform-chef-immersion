#cloud-config
output: { all: '| tee -a /var/log/cloud-init-output.log' }
write_files:
  - path: /update-hostname.sh
    permissions: 0744
    owner: root
    content: |
      #!/bin/bash
      hostname=$(curl http://169.254.169.254/latest/meta-data/public-hostname)
      public_ip=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)

      hostnamectl set-hostname ${hostname}

      cat >/etc/hosts <<EOF
      127.0.0.1 localhost
      ${public_ip} ${hostname}

      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts
      EOF
  - path: /bootstrap-chef-server.sh
    permissions: 0744
    owner: root
    content: |
      #!/bin/bash
      apt-get update
      apt-get -y install curl

      touch chef-server-install.txt

      # create staging directories
      if [ ! -d /drop ]; then
        mkdir /drop
      fi
      if [ ! -d /downloads ]; then
        mkdir /downloads
      fi

      # download the Chef server package
      if [ ! -f /downloads/chef-server-core_12.17.33_amd64.deb ]; then
      {  
          echo "Downloading the Chef server package..."
          wget -nv -P /downloads https://packages.chef.io/files/stable/chef-server/12.17.33/ubuntu/16.04/chef-server-core_12.17.33-1_amd64.deb
      } >> chef-server-install.txt

      fi

      # install Chef server
      if [ ! $(which chef-server-ctl) ]; then
      {
          echo "Installing Chef server..."
          dpkg -i /downloads/chef-server-core_12.17.33-1_amd64.deb
          chef-server-ctl reconfigure
      } >> chef-server-install.txt


        echo "Waiting for services..." >> chef-server-install.txt
        until (curl -D - http://localhost:8000/_status) | grep "200 OK"; do sleep 15s; done
        while (curl http://localhost:8000/_status) | grep "fail"; do sleep 15s; done

        echo "Creating initial user and organization..." >> chef-server-install.txt
        chef-server-ctl user-create chefadmin Chef Admin admin@hizzleinc.com insecurepassword --filename /drop/chefadmin.pem
        chef-server-ctl org-create hizzleinc "Hizzle, Inc." --association_user chefadmin --filename hizzleinc-validator.pem
      fi

      echo "Your Chef server is ready!" >> chef-server-install.txt
runcmd:
  - bash /update-hostname.sh
  - bash /bootstrap-chef-server.sh
final_message: "Your Chef server is ready!"